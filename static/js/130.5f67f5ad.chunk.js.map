{"version":3,"file":"static/js/130.5f67f5ad.chunk.js","mappings":"yNACA,EAA+B,4BAA/B,EAAmE,qBAAnE,EAAgG,qBAAhG,EAAiI,yB,wCCmBjI,EAdc,SAAC,GAAsF,IAArFA,EAAoF,EAApFA,MAAOC,EAA6E,EAA7EA,KAAMC,EAAuE,EAAvEA,UAAcC,GAAyD,YAC1FC,EAAWH,EAAKI,OAASJ,EAAKK,QAE9BC,EAAaH,EAAWI,EAAU,GAClCC,EAAY,UAAMD,EAAN,YAAwBD,EAAxB,YAAsCL,GAAwB,IAEhF,OACI,iBAAKA,UAAWO,EAAhB,UACKL,IAAY,iBAAMF,UAAWM,EAAjB,SAA+BP,EAAKI,SACjD,kCAAOH,UAAWM,GAAaR,GAAWG,Q,sCCwBhDO,GAAiBC,EAAAA,EAAAA,GAAwB,CAACC,KAAM,SAA/BD,EAtBqC,SAACR,GACzD,OACI,kBAAMU,SAAUV,EAAMW,aAAcC,MAAO,CAACC,QAAS,OAAQC,cAAe,SAAUC,IAAK,OAA3F,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,KAAM,QAASC,UAAWC,EAAOC,SAAU,CAACC,EAAAA,GAAgBC,YAAY,aAEnF,0BACI,SAACN,EAAA,EAAD,CAAOC,KAAM,WAAYC,UAAWC,EAAOC,SAAU,CAACC,EAAAA,GAAgBC,YAAY,WAAWC,KAAM,gBAEvG,iBAAKX,MAAO,CAACC,QAAS,OAAQW,WAAY,SAAUT,IAAK,OAAzD,WACI,SAACC,EAAA,EAAD,CAAOC,KAAM,aAAcC,UAAWC,EAAOI,KAAM,aADvD,mBAGA,0BACI,iBAAMX,MAAO,CAACa,MAAO,OAArB,SAA8BzB,EAAME,WAExC,0BACI,8CAoChB,GAAewB,EAAAA,EAAAA,KAJF,SAACC,GAAD,MAA2B,CACpCC,OAAQD,EAAME,KAAKD,UAGM,CAACE,MAAAA,EAAAA,IAA9B,EAvBwC,SAAC9B,GACrC,GAAIA,EAAM4B,OAAQ,OAAO,SAAC,KAAD,CAAUG,GAAI,aAUvC,OACI,iBAAKnB,MAAO,CAACoB,QAAS,aAAtB,WACI,mCACA,SAACzB,EAAD,CAAgBG,SAXP,SAACuB,GACdjC,EAAM8B,MAAM,CACRI,MAAOD,EAASH,MAChBK,SAAUF,EAASE,SACnBC,WAAYH,EAASG","sources":["webpack://react-samuraj-ts/./src/common/Input/Input.module.css?d11c","common/Input/Input.tsx","components/Login/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"Input_inputWrapper__DmEBj\",\"input\":\"Input_input__McLNx\",\"error\":\"Input_error__cthXC\",\"errorSpan\":\"Input_errorSpan__AzWs+\"};","import React, {InputHTMLAttributes} from 'react';\r\nimport s from './Input.module.css'\r\nimport {WrappedFieldProps} from \"redux-form\";\r\n\r\ntype TextareaDefaultPropsType = InputHTMLAttributes<HTMLInputElement>\r\n\r\nconst Input = ({input, meta, className, ...props}: WrappedFieldProps & TextareaDefaultPropsType) => {\r\n    const hasError = meta.error && meta.touched\r\n\r\n    const errorClass = hasError ? s.error : ''\r\n    const wrapperClass = `${s.inputWrapper} ${errorClass} ${className ? className : ''}`\r\n\r\n    return (\r\n        <div className={wrapperClass}>\r\n            {hasError && <span className={s.errorSpan}>{meta.error}</span>}\r\n            <input className={s.input} {...input} {...props}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport Input from \"../../common/Input/Input\";\r\nimport {requiredField} from \"../../utils/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {LoginDataType} from \"../../api/api\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\ntype FormDataType = {\r\n    login: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nconst LoginForm:React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} style={{display: 'flex', flexDirection: 'column', gap: '5px'}}>\r\n            <div>\r\n                <Field name={'login'} component={Input} validate={[requiredField]} placeholder='login'/>\r\n            </div>\r\n            <div>\r\n                <Field name={'password'} component={Input} validate={[requiredField]} placeholder=\"password\" type={'password'}/>\r\n            </div>\r\n            <div style={{display: 'flex', alignItems: 'center', gap: '5px'}}>\r\n                <Field name={'rememberMe'} component={Input} type={'checkbox'}/> Remember me\r\n            </div>\r\n            <div>\r\n                <span style={{color: \"red\"}}>{props.error}</span>\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\n\r\ntype LoginPropsType = {\r\n    login: (loginData: LoginDataType) => void\r\n    isAuth: boolean\r\n}\r\nconst Login: React.FC<LoginPropsType> = (props) => {\r\n    if (props.isAuth) return <Redirect to={'/profile'}/>\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login({\r\n            email: formData.login,\r\n            password: formData.password,\r\n            rememberMe: formData.rememberMe\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={{padding: '10px 20px'}}>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mstp = (state: RootStateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mstp, {login})(Login);"],"names":["input","meta","className","props","hasError","error","touched","errorClass","s","wrapperClass","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","style","display","flexDirection","gap","Field","name","component","Input","validate","requiredField","placeholder","type","alignItems","color","connect","state","isAuth","auth","login","to","padding","formData","email","password","rememberMe"],"sourceRoot":""}