{"version":3,"file":"static/js/130.bfc7943c.chunk.js","mappings":"yNACA,EAA+B,4BAA/B,EAAmE,qBAAnE,EAAgG,qBAAhG,EAAiI,yB,wCCmBjI,EAdc,SAAC,GAAsF,IAArFA,EAAoF,EAApFA,MAAOC,EAA6E,EAA7EA,KAAMC,EAAuE,EAAvEA,UAAcC,GAAyD,YAC1FC,EAAWH,EAAKI,OAASJ,EAAKK,QAE9BC,EAAaH,EAAWI,EAAU,GAClCC,EAAY,UAAMD,EAAN,YAAwBD,EAAxB,YAAsCL,GAAwB,IAEhF,OACI,iBAAKA,UAAWO,EAAhB,UACKL,IAAY,iBAAMF,UAAWM,EAAjB,SAA+BP,EAAKI,SACjD,kCAAOH,UAAWM,GAAaR,GAAWG,Q,uCCwChDO,GAAiBC,EAAAA,EAAAA,GAA4C,CAAEC,KAAM,SAApDD,EAlC+E,SAAAR,GACpG,OACE,kBAAMU,SAAUV,EAAMW,aAAcC,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,IAAK,OAA5F,WACE,0BACE,SAACC,EAAA,EAAD,CAAOC,KAAM,QAASC,UAAWC,EAAOC,SAAU,CAACC,EAAAA,GAAgBC,YAAY,aAEjF,0BACE,SAACN,EAAA,EAAD,CACEC,KAAM,WACNC,UAAWC,EACXC,SAAU,CAACC,EAAAA,GACXC,YAAY,WACZC,KAAM,gBAGV,iBAAKX,MAAO,CAAEC,QAAS,OAAQW,WAAY,SAAUT,IAAK,OAA1D,WACE,SAACC,EAAA,EAAD,CAAOC,KAAM,aAAcC,UAAWC,EAAOI,KAAM,aADrD,kBAGCvB,EAAMyB,UACL,4BACE,gBAAKC,IAAK1B,EAAMyB,QAASE,IAAI,aAC7B,SAACX,EAAA,EAAD,CAAOC,KAAM,UAAWK,YAAa,gBAAiBJ,UAAWC,EAAOC,SAAU,CAACC,EAAAA,SAGvF,0BACE,iBAAMT,MAAO,CAAEgB,MAAO,OAAtB,SAAgC5B,EAAME,WAExC,0BACE,8CAsCR,GAAe2B,EAAAA,EAAAA,KALF,SAACC,GAAD,MAA2B,CACtCC,OAAQD,EAAME,KAAKD,OACnBN,QAASK,EAAME,KAAKP,WAGO,CAAEQ,MAAAA,EAAAA,IAA/B,EAzBwC,SAAAjC,GACtC,GAAIA,EAAM+B,OAAQ,OAAO,SAAC,KAAD,CAAUG,GAAI,aAWvC,OACE,iBAAKtB,MAAO,CAAEuB,QAAS,aAAvB,WACE,mCACA,SAAC5B,EAAD,CAAgBkB,QAASzB,EAAMyB,QAASf,SAZ3B,SAAC0B,GAChBpC,EAAMiC,MAAM,CACVI,MAAOD,EAASH,MAChBK,SAAUF,EAASE,SACnBC,WAAYH,EAASG,WACrBd,QAASW,EAASX","sources":["webpack://react-samuraj-ts/./src/common/Input/Input.module.css?d11c","common/Input/Input.tsx","components/Login/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"Input_inputWrapper__DmEBj\",\"input\":\"Input_input__McLNx\",\"error\":\"Input_error__cthXC\",\"errorSpan\":\"Input_errorSpan__AzWs+\"};","import React, {InputHTMLAttributes} from 'react';\r\nimport s from './Input.module.css'\r\nimport {WrappedFieldProps} from \"redux-form\";\r\n\r\ntype TextareaDefaultPropsType = InputHTMLAttributes<HTMLInputElement>\r\n\r\nconst Input = ({input, meta, className, ...props}: WrappedFieldProps & TextareaDefaultPropsType) => {\r\n    const hasError = meta.error && meta.touched\r\n\r\n    const errorClass = hasError ? s.error : ''\r\n    const wrapperClass = `${s.inputWrapper} ${errorClass} ${className ? className : ''}`\r\n\r\n    return (\r\n        <div className={wrapperClass}>\r\n            {hasError && <span className={s.errorSpan}>{meta.error}</span>}\r\n            <input className={s.input} {...input} {...props}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;","import React from 'react'\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\nimport Input from '../../common/Input/Input'\nimport { requiredField } from '../../utils/validators'\nimport { connect } from 'react-redux'\nimport { login } from '../../redux/auth-reducer'\nimport { LoginDataType } from '../../api/api'\nimport { RootStateType } from '../../redux/redux-store'\nimport { Redirect } from 'react-router-dom'\n\ntype FormDataType = {\n  login: string\n  password: string\n  rememberMe: boolean\n  captcha?: string\n}\n\ntype LoginFormPropsType = {\n  captcha: string | null\n}\n\nconst LoginForm: React.FC<LoginFormPropsType & InjectedFormProps<FormDataType, LoginFormPropsType>> = props => {\n  return (\n    <form onSubmit={props.handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: '5px' }}>\n      <div>\n        <Field name={'login'} component={Input} validate={[requiredField]} placeholder=\"login\" />\n      </div>\n      <div>\n        <Field\n          name={'password'}\n          component={Input}\n          validate={[requiredField]}\n          placeholder=\"password\"\n          type={'password'}\n        />\n      </div>\n      <div style={{ display: 'flex', alignItems: 'center', gap: '5px' }}>\n        <Field name={'rememberMe'} component={Input} type={'checkbox'} /> Remember me\n      </div>\n      {props.captcha && (\n        <div>\n          <img src={props.captcha} alt=\"captcha\" />\n          <Field name={'captcha'} placeholder={'Enter captcha'} component={Input} validate={[requiredField]} />\n        </div>\n      )}\n      <div>\n        <span style={{ color: 'red' }}>{props.error}</span>\n      </div>\n      <div>\n        <button>Login</button>\n      </div>\n    </form>\n  )\n}\n\nconst LoginReduxForm = reduxForm<FormDataType, LoginFormPropsType>({ form: 'login' })(LoginForm)\n\ntype LoginPropsType = {\n  login: (loginData: LoginDataType) => void\n  captcha: string | null\n  isAuth: boolean\n}\nconst Login: React.FC<LoginPropsType> = props => {\n  if (props.isAuth) return <Redirect to={'/profile'} />\n\n  const onSubmit = (formData: FormDataType) => {\n    props.login({\n      email: formData.login,\n      password: formData.password,\n      rememberMe: formData.rememberMe,\n      captcha: formData.captcha,\n    })\n  }\n\n  return (\n    <div style={{ padding: '10px 20px' }}>\n      <h1>LOGIN</h1>\n      <LoginReduxForm captcha={props.captcha} onSubmit={onSubmit} />\n    </div>\n  )\n}\n\nconst mstp = (state: RootStateType) => ({\n  isAuth: state.auth.isAuth,\n  captcha: state.auth.captcha,\n})\n\nexport default connect(mstp, { login })(Login)\n"],"names":["input","meta","className","props","hasError","error","touched","errorClass","s","wrapperClass","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","style","display","flexDirection","gap","Field","name","component","Input","validate","requiredField","placeholder","type","alignItems","captcha","src","alt","color","connect","state","isAuth","auth","login","to","padding","formData","email","password","rememberMe"],"sourceRoot":""}