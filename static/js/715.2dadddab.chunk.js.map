{"version":3,"file":"static/js/715.2dadddab.chunk.js","mappings":"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","sources":["webpack://react-samuraj-ts/./src/common/Paginator/Paginator.module.css?abf7","common/Paginator/Paginator.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"paginator\":\"Paginator_paginator__JrUmO\"};","import React, { FC } from 'react'\nimport s from './Paginator.module.css'\nimport { Pagination, PaginationProps } from 'antd'\n\ntype PropsType = {\n  totalItemsCount: number\n  pageSize: number\n  currentPage: number\n  onPageChange: (newPage: number) => void\n}\n\nexport const Paginator: FC<PropsType> = ({ totalItemsCount, pageSize, onPageChange, currentPage }) => {\n  const itemRender: PaginationProps['itemRender'] = (_, type, originalElement) => {\n    if (type === 'jump-next' || type === 'jump-prev') {\n      return <span>...</span>\n    }\n    return originalElement\n  }\n\n  return (\n    <Pagination\n      className={s.paginator}\n      current={currentPage}\n      total={totalItemsCount}\n      pageSize={pageSize}\n      onChange={onPageChange}\n      showSizeChanger={false}\n      itemRender={itemRender}\n    />\n  )\n}\n","import React from 'react'\nimport defaultUserAvatar from '../../assets/images/avatar.png'\nimport { UserType } from '../../redux/users-reducer'\nimport { NavLink } from 'react-router-dom'\nimport { Paginator } from '../../common/Paginator/Paginator'\n\ntype PropsType = {\n  users: UserType[]\n  countOnPage: number\n  currentPage: number\n  totalCount: number\n  follow: (userId: number) => void\n  unfollow: (userId: number) => void\n  handlePageChange: (currentPage: number) => void\n  followingInProgress: number[]\n  setFollowingInProgress: (userId: number, isFetching: boolean) => void\n}\n\nconst Users: React.FC<PropsType> = props => {\n  return (\n    <div style={{ padding: '10px' }}>\n      <Paginator\n        totalItemsCount={props.totalCount}\n        pageSize={props.countOnPage}\n        currentPage={props.currentPage}\n        onPageChange={props.handlePageChange}\n      />\n      <ul>\n        {props.users.map(u => {\n          return (\n            <li key={u.id} style={{ marginBottom: '10px', paddingBottom: '10px', borderBottom: '1px solid white' }}>\n              <NavLink to={`/profile/${u.id}`}>\n                <img\n                  src={u.photos.small ? u.photos.small : defaultUserAvatar}\n                  style={{ width: '48px', height: '48px', borderRadius: '50%' }}\n                  alt={'avatar'}\n                />\n              </NavLink>\n              <div>Name: {u.name}</div>\n              {u.followed ? (\n                <button\n                  disabled={props.followingInProgress.some(el => el === u.id)}\n                  onClick={() => props.unfollow(u.id)}>\n                  Unfollow\n                </button>\n              ) : (\n                <button disabled={props.followingInProgress.some(el => el === u.id)} onClick={() => props.follow(u.id)}>\n                  Follow\n                </button>\n              )}\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nexport default Users\n","import {RootStateType} from \"./redux-store\";\r\n\r\n\r\nexport const getUsersSelector = (state: RootStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getCountOnPageSelector = (state: RootStateType) => {\r\n    return state.usersPage.countOnPage\r\n}\r\n\r\nexport const getCurrentPageSelector = (state: RootStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getTotalCountSelector = (state: RootStateType) => {\r\n    return state.usersPage.totalCount\r\n}\r\n\r\nexport const getIsFetchingSelector = (state: RootStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgressSelector = (state: RootStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n","import {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport React from \"react\";\r\nimport {\r\n    follow, getUsers,\r\n    setCurrentPage, setFollowingInProgress,\r\n    unfollow,\r\n    UserType\r\n} from \"../../redux/users-reducer\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n    getCountOnPageSelector,\r\n    getCurrentPageSelector, getFollowingInProgressSelector, getIsFetchingSelector,\r\n    getTotalCountSelector,\r\n    getUsersSelector\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    users: UserType[]\r\n    countOnPage: number\r\n    currentPage: number\r\n    totalCount: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    setFollowingInProgress: (userId: number, isFetching: boolean) => void\r\n    getUsers: (countOnPage: number, currentPage: number) => void\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType, any> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.countOnPage, this.props.currentPage)\r\n    }\r\n\r\n    handlePageChange = (page: number) => {\r\n        this.props.getUsers(this.props.countOnPage, page)\r\n        this.props.setCurrentPage(page)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.isFetching\r\n                ? <h2>Loading...</h2>\r\n                : <Users\r\n                    users={this.props.users}\r\n                    countOnPage={this.props.countOnPage}\r\n                    currentPage={this.props.currentPage}\r\n                    totalCount={this.props.totalCount}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    handlePageChange={this.handlePageChange}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    setFollowingInProgress={this.props.setFollowingInProgress}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => ({\r\n    users: getUsersSelector(state),\r\n    countOnPage: getCountOnPageSelector(state),\r\n    currentPage: getCurrentPageSelector(state),\r\n    totalCount: getTotalCountSelector(state),\r\n    isFetching: getIsFetchingSelector(state),\r\n    followingInProgress: getFollowingInProgressSelector(state)\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    setFollowingInProgress,\r\n    getUsers\r\n})(UsersContainer)"],"names":["Paginator","totalItemsCount","pageSize","onPageChange","currentPage","className","s","current","total","onChange","showSizeChanger","itemRender","_","type","originalElement","props","style","padding","totalCount","countOnPage","handlePageChange","users","map","u","marginBottom","paddingBottom","borderBottom","to","id","src","photos","small","defaultUserAvatar","width","height","borderRadius","alt","name","followed","disabled","followingInProgress","some","el","onClick","unfollow","follow","getUsersSelector","state","usersPage","getCountOnPageSelector","getCurrentPageSelector","getTotalCountSelector","getIsFetchingSelector","isFetching","getFollowingInProgressSelector","UsersContainer","page","getUsers","setCurrentPage","this","setFollowingInProgress","React","connect"],"sourceRoot":""}